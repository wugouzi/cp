//
// Created by wu on 2022/5/8.
//

#include "leetcode.h"

int n, m;
bool flag;
vector<vector<vector<int>>> check;
void dfs(vector<vector<char>>& grid, int i, int j, int cnt) {
    cnt += grid[i][j] == '(' ? 1 : -1;
    if (cnt < 0)
        return;
    if (i == n-1 && j == m-1 && cnt == 0) {
        flag = true;
        return;
    }
    if (cnt > n-1-i+m-1-j)
        return;
    //cout << i << ' ' << j << ' ' << cnt << endl;
    if (flag)
        return;
    if (i+1 < n && check[i+1][j][cnt]==0) {
        dfs(grid, i + 1, j, cnt);
        check[i+1][j][cnt] = 1;
    }
    if (flag)
        return;
    if (j+1<m && check[i][j+1][cnt] == 0) {
        dfs(grid,i,j+1,cnt);
        check[i][j+1][cnt] = 1;
    }
    if (flag)
        return;
}
bool hasValidPath(vector<vector<char>>& grid) {
    n = grid.size(), m = grid[0].size();
    check.resize(n, vector<vector<int>>(m,vector<int>(200)));
    check[n-1][m-1][0] = true;
    flag = false;
    dfs(grid,0,0,0);
    return flag;
}

int main(void) {
    //vector<vector<char>> grid = {{'(',')',')','(','(','(','(',')',')','(',')','(',')','(','(','(','(',')','(',')','('},{'(','(',')',')','(',')',')',')','(',')','(',')','(','(',')','(','(','(','(','(',')'},{')',')','(',')',')','(','(',')','(','(',')','(',')',')','(',')',')','(','(',')',')'},{'(','(',')','(',')','(',')',')',')','(',')','(','(',')','(',')',')','(',')',')',')'},{'(','(','(',')','(','(',')','(',')',')','(',')',')',')',')',')',')','(',')','(','('},{')',')','(','(',')',')',')',')',')','(',')',')',')','(','(',')','(','(','(','(',')'},{')',')',')',')','(',')','(',')','(','(',')','(','(',')','(','(',')',')','(',')','('},{'(',')','(','(','(',')',')',')',')','(','(',')','(','(',')',')','(',')',')',')','('},{'(',')','(',')','(','(','(','(',')','(','(','(','(','(','(',')','(',')','(',')',')'},{'(',')','(','(','(',')','(',')',')',')',')','(','(','(','(',')',')','(','(','(',')'},{'(','(',')','(',')',')','(',')','(',')',')',')',')',')','(',')','(',')',')',')','('},{')','(','(','(',')','(',')',')','(',')','(',')','(','(',')','(','(',')','(','(',')'},{'(',')','(',')',')','(','(',')','(',')','(',')',')',')','(','(','(','(',')','(',')'},{'(','(',')','(',')',')','(','(','(',')','(',')','(','(',')',')','(','(','(',')',')'},{'(','(','(','(',')',')','(',')','(','(','(',')',')','(',')','(',')',')',')',')','('},{'(','(','(',')',')',')','(',')',')','(',')',')','(','(',')','(',')','(','(','(',')'},{')',')',')',')',')',')','(',')',')',')','(','(',')','(',')','(','(','(','(',')',')'}};
    vector<vector<char>> grid = {{'(','(','('},{')','(',')'},{'(','(',')'},{'(','(',')'}};
    cout << 1 + hasValidPath(grid);
}